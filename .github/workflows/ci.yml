name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  frontend:
    name: Frontend Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Client

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '19.x'
          cache: 'npm'
          cache-dependency-path: './Client/package-lock.json'

      - name: Install Dependencies
        run: |
          npm install
          npm ci

      - name: Type Check
        run: npm run check-types

      - name: Run Unit Tests
        run: npm run test:coverage

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Build Frontend
        run: npm run build

  backend:
    name: Backend Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./API

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore TenXCards.sln

      - name: Build
        run: dotnet build TenXCards.sln --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test TenXCards.sln --no-restore --verbosity normal --collect:"XPlat Code Coverage"

  # deploy:
  #   name: Deploy to Render
  #   needs: [frontend, backend]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Deploy to Render
  #       env:
  #         RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
  #       run: |
  #         curl -X GET "$RENDER_DEPLOY_HOOK_URL" 