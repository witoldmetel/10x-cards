name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  frontend:
    name: Frontend Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Client

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './Client/package-lock.json'

      - name: Install Dependencies
        run: |
          npm install
          npm ci

      - name: Type Check
        run: npm run check-types

      - name: Run Unit Tests
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Build Frontend
        run: npm run build

  backend:
    name: Backend Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Display Structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "API directory contents:"
          ls -la API/
          echo "TenXCards.API directory contents:"
          ls -la API/TenXCards.API/

      - name: Restore Solution Dependencies
        working-directory: API
        run: dotnet restore TenXCards.API/TenXCards.API.sln
        env:
          DOTNET_ENVIRONMENT: Development
          ConnectionStrings__DefaultConnection: ${{ secrets.DATABASE_CONNECTION_STRING }}
          JWT__SecretKey: ${{ secrets.JWT_SECRET_KEY }}
          JWT__Issuer: ${{ secrets.JWT_ISSUER }}
          JWT__Audience: ${{ secrets.JWT_AUDIENCE }}

      - name: Build Solution
        working-directory: API
        run: dotnet build TenXCards.API/TenXCards.API.sln --configuration Release --no-restore
        env:
          DOTNET_ENVIRONMENT: Development
          ConnectionStrings__DefaultConnection: ${{ secrets.DATABASE_CONNECTION_STRING }}
          JWT__SecretKey: ${{ secrets.JWT_SECRET_KEY }}
          JWT__Issuer: ${{ secrets.JWT_ISSUER }}
          JWT__Audience: ${{ secrets.JWT_AUDIENCE }}

      - name: Run Tests
        working-directory: API
        run: dotnet test TenXCards.API/TenXCards.API.sln --no-restore --verbosity normal --collect:"XPlat Code Coverage"
        env:
          DOTNET_ENVIRONMENT: Development
          ConnectionStrings__DefaultConnection: ${{ secrets.DATABASE_CONNECTION_STRING }}
          JWT__SecretKey: ${{ secrets.JWT_SECRET_KEY }}
          JWT__Issuer: ${{ secrets.JWT_ISSUER }}
          JWT__Audience: ${{ secrets.JWT_AUDIENCE }}

      - name: Upload Backend Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: ./API/TestResults/
          retention-days: 7

  # deploy:
  #   name: Deploy to Render
  #   needs: [frontend, backend]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Deploy to Render
  #       env:
  #         RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
  #       run: |
  #         curl -X GET "$RENDER_DEPLOY_HOOK_URL" 