version: "3.8"

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=${DOCKER_DB_CONNECTION_STRING}
      - OpenRouter__ApiKey=${OPENROUTER_API_KEY}
      - OpenRouter__BaseUrl=https://openrouter.ai/api/v1
      - OpenRouter__ApiEndpoint=/chat/completions
      - OpenRouter__DefaultModel=openai/gpt-3.5-turbo
      - OpenRouter__TimeoutSeconds=120
      - OpenRouter__SiteUrl=http://localhost:3000
      - OpenRouter__SiteName=10X Cards - Development
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
      - ./API/TenXCards.API:/src/API/TenXCards.API
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
    driver: local
